# configuration.nix
# This configuration file is used to define your system configuration
# For more details, refer to the NixOS manual and configuration.nix(5)

{ config, lib, pkgs, ... }:

{
  nixpkgs.config.allowUnfree = true;

  #############################
  # Basic Imports, Bootloader, and Graphics Driver Settings
  #############################

  # Import hardware configuration generated by the installer
  imports = [ ./hardware-configuration.nix ];

  # Bootloader settings
  boot.loader.efi.canTouchEfiVariables = true;
  boot.loader.systemd-boot.enable = true;

  #  This stuff may be unnecessary
  #  boot.loader.efi.efiSysMountPoint = "/boot";
  #  boot.loader.grub = {
  #    enable = true;
  #    efiSupport = true;
  #    device = "nodev";
  #    useOSProber = true; # Enable detection of Windows
  #  };


  # NVIDIA driver configuration
  boot.kernelModules = [ "nvidia" "nvidia_modeset" "nvidia_uvm" "nvidia_drm" ];
  boot.extraModulePackages = [ pkgs.nvidiaPackages.stable ];  # Or replace 'stable' with 'studio' if needed

  hardware.graphics = {
    enable = true;
    extraPackages = with pkgs; [ pkgs.nvidiaPackages.stable ];  # Use 'studio' here if you want Studio drivers
  };

  # For systems using X11; if you're strictly on Wayland you may omit this line:
  services.xserver.videoDrivers = [ "nvidia" ];

  hardware.nvidia = {
    modesetting.enable = true;
    powerManagement.enable = false;
    powerManagement.finegrained = false;
    open = false;             # Set to true if you have a Turing+ GPU and want open drivers
    nvidiaSettings = true;
    package = config.boot.kernelPackages.nvidiaPackages.stable;
  };

  #############################
  # Localization, Time, and Console Settings
  #############################

  # Set your time zone
  time.timeZone = "America/Los_Angeles";

  # Set the default locale
  i18n.defaultLocale = "en_US.UTF-8";

  # Console settings
  console.keyMap = "us";

  #############################
  # Networking Settings
  #############################

  # Enable NetworkManager for managing network connections
  networking.networkmanager.enable = true;
  systemd.services.NetworkManager.wantedBy = [ "multi-user.target" ];

  #############################
  # User Account
  #############################

  # Define your user account. Replace "leyton" and adjust groups as needed
  users.users.leyton = {
    isNormalUser = true;
    description = "Leyton Houck";
    home = "/home/leyton";
    extraGroups = [ "wheel" "networkmanager" "video" "input" ]; # Provides sudo and other privileges
    shell = pkgs.fish;
    initialPassword = "7574";
  };

  # Enable auto login
  services.getty.autologinUser = "leyton";

  #############################
  # Package and Environment Settings
  #############################

  # System-wide packages
  environment.systemPackages = with pkgs; [
    hyprland                    # Hyprland window manager
    xdg-desktop-portal-hyprland # Portal for Wayland app compatibility
    waybar                      # Status bar
    rofi                        # Application launcher
    mako                        # Notification daemon
    foot                        # Terminal emulator
    grim                        # Screenshot utility
    slurp                       # Selection tool for screenshots
    nwg-look                    # Theme utility for Hyprland
    swww                        # Wallpaper setter
    polkit-kde-agent            # PolicyKit agent
    vscode                       # Visual Studio Code
    git                          # Git version control system
    neofetch                     # Neofetch system information tool
    fish                         # The Fish shell (installed system-wide)
  ];

  # Environment variables needed for Wayland and electron app support
  environment.variables = {
    XDG_SESSION_TYPE = "wayland";
    NIXOS_OZONE_WL = "1";           # Enable Wayland support for electron apps
    WLR_NO_HARDWARE_CURSORS = "1";  # Disable hardware cursors for improved performance
  };

  #############################
  # Service Configuration
  #############################

  # Enable D-Bus for inter-process communication required by Wayland apps
  services.dbus.enable = true;

  # Enable XDG portals for app compatibility
  xdg.portal = {
    enable = true;
    extraPortals = [
      pkgs.xdg-desktop-portal-hyprland
      pkgs.xdg-desktop-portal-gtk
    ];
  };

  # Enable PipeWire for sound and PulseAudio compatibility
  services.pipewire = {
    enable = true;
    pulse.enable = true;
  };

  # Enable greetd for login management with Hyprland
  services.greetd = {
    enable = true;
    settings.default_session = {
      command = "${pkgs.hyprland}/bin/Hyprland";
      user = "leyton";  # Replace with your username if different
    };
  };

  #############################
  # Programs
  #############################

  programs.fish.enable = true;          # Fish shell
  programs.hyprland.enable = true;      # Hyprland support
  programs.firefox.enable = true;       # Firefox browser

  #############################
  # Hyprland Configuration
  #############################

  # System-wide Hyprland configuration
  environment.etc."xdg/hypr/hyprland.conf".text = ''
    # Monitor configuration
    monitor=,preferred,auto,1

    # Autostart applications on session start
    exec-once = waybar & mako & swww init

    general {
      gaps_in = 5
      gaps_out = 10
      border_size = 2
    }
    input {
      kb_layout = us
      follow_mouse = 1
    }
    gestures {
      workspace_swipe = true
    }
    # Keybindings for Hyprland
    bind=SUPER, RETURN, exec, foot
    bind=SUPER, Q, killactive,
    bind=SUPER, D, exec, rofi -show drun
    bind=SUPER, F, fullscreen,
    bind=SUPER, LEFT, movefocus, l
    bind=SUPER, RIGHT, movefocus, r
    bind=SUPER, UP, movefocus, r
    bind=SUPER, DOWN, movefocus, d
    bind=SUPER SHIFT, LEFT, movewindow, l
    bind=SUPER SHIFT, RIGHT, movewindow, r
    bind=SUPER SHIFT, UP, movewindow, u
    bind=SUPER SHIFT, DOWN, movewindow, d
  '';

  #############################
  # System State Version
  #############################

  # The state version ensures compatibility with application data created
  # with previous versions of NixOS. Do not change this value after installation
  system.stateVersion = "24.11";
}
